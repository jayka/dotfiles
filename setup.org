#+PROPERTY: header-args :results output silent
#+PROPERTY: header-args :tangle yes

* Setup
  - To setup you must have Emacs downloaded. 
  - In Terminal, run `./runme`

* Setup Personal Details
  #+begin_src sh :shebang "#!/bin/bash"
  read -p "Enter name: " user_name
  read -p "Enter email: " user_email
  #+end_src

* Some utilities for the script
  #+begin_src sh
  Y='\033[1;33m'
  NC='\033[0m'
  prn()
  {
    text=$1
    echo -e "${Y}${text}${NC}"
  }
  
  make_backup()
  {
    rnd=$(date +%s)
    bkp=$HOME/$1.$rnd
    mv $HOME/$1 $bkp 
    prn "Moved existing $1 to $bkp"
  }
  
  BASE_DIR=$(dirname $0)
  FULL_BASE_DIR=$(cd $BASE_DIR; pwd) 
 #+end_src

* Checkout all submodules from setup repo
  #+begin_src sh
  prn "Checkout all submodules"

  git submodule update --init --recursive

  #+end_src

* Pre-installation setup
  #+begin_src sh
    prn "Performing Pre-installation setup"
    
    preinst_file="emacs.d,.emacs.d Brewfile .bashrc .bash_profile .inputrc starship.toml,.config/starship.toml"
    
    for f in $preinst_file; do
    
      from_f=$(echo $f | cut -d ',' -f 1)
      to_f=$(echo $f | cut -d ',' -f 2)
    
      if [ -z $to_f ]; then
        to_f=$from_f;
      fi
    
      if [ -e $HOME/$to_f ]; then
        while true; do
          read -p "$to_f exists. Will backup $to_f. Proceed? (y/N -default)" yn
          case $yn in
            [Yy]* ) make_backup $to_f; ln -s $FULL_BASE_DIR/$from_f $HOME/$to_f; break;;
            ,* ) echo "Skipping $to_f ..."; break;;
          esac
        done
      else
        prn "Creating $to_f ..."
        ln -s $FULL_BASE_DIR/$from_f $HOME/$to_f;
      fi
    
    done
    
  #+end_src

* Install Homebrew
 #+begin_src sh
 if ! command -v brew ; then
   prn "Installing Homebrew"
   /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
 else
   prn "Homebrew already installed at $(command -v brew)"
 fi
  
 # Don't proceed without brew
 if ! command -v brew ; then 
   prn "Homebrew not installed properly. Please reinstall Homebrew. Quitting!!!"
   exit 1;
 fi

 #+end_src

* Install Homebrew bundles
  #+begin_src sh
  prn "Installing Homebrew bundles"

  brew bundle --file=$FULL_BASE_DIR/Brewfile --verbose
  #+end_src

* Set Terminal Theme
  #+begin_src text
  prn "Setting Termial Theme"

  # taken from https://github.com/mathiasbynens/dotfiles/blob/master/.macos#L626
  osascript <<EOD
  tell application "Terminal"
  	local allOpenedWindows
  	local initialOpenedWindows
  	local windowID
  	set themeName to "BirdsOfParadise"

  	(* Store the IDs of all the open terminal windows. *)
  	set initialOpenedWindows to id of every window

  	(* Open the custom theme so that it gets added to the list
  	   of available terminal themes (note: this will open two
  	   additional terminal windows). *)
  	do shell script "open './" & themeName & ".terminal'"

  	(* Wait a little bit to ensure that the custom theme is added. *)
  	delay 1

  	(* Set the custom theme as the default terminal theme. *)
  	set default settings to settings set themeName

  	(* Get the IDs of all the currently opened terminal windows. *)
  	set allOpenedWindows to id of every window
  	repeat with windowID in allOpenedWindows

  		(* Close the additional windows that were opened in order
  		   to add the custom theme to the list of terminal themes. *)
  		if initialOpenedWindows does not contain windowID then
  			close (every window whose id is windowID)

  		(* Change the theme for the initial opened terminal windows
  		   to remove the need to close them in order for the custom
  		   theme to be applied. *)
  		else
  			set current settings of tabs of (every window whose id is windowID) to settings set themeName
  		end if
  	end repeat
  end tell

EOD

  #+end_src

** Set zsh as default shell
  #+begin_src sh
    currentshell=$(echo $SHELL | tr '/' '\n' | tail -n1)
    
    # Checking if fish is added to /etc/shells
    if ! grep '/usr/local/bin/bash' /etc/shells ; then
      prn "Adding latest BASH to /etc/shells"
      echo "/usr/local/bin/bash" | sudo tee -a /etc/shells
    fi
    
    # Change shell
    prn "Setting BASH as default shell"
    for i in {1..3};
    do
      chsh -s '/usr/local/bin/bash' && break
      sleep 1;
      prn "Retrying.."
    done
    

  #+end_src
